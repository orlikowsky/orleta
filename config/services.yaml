# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\RegistrationController:
        arguments:
            $formFactory: '@fos_user.registration.form.factory'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    sonata.admin.maker:
        class: Sonata\AdminBundle\Maker\AdminMaker
        arguments: ['%kernel.project_dir%', ['@sonata.admin.manager.orm']]
        tags:
            - { name: maker.command }

    admin.season:
        class: App\Admin\SeasonAdmin
        arguments: [~, App\Entity\Season, App\Controller\SeasonAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Season }
        public: true

    admin.table:
        class: App\Admin\TableAdmin
        arguments: [~, App\Entity\Table, App\Controller\TableAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Table }
        public: true

    admin.queue:
        class: App\Admin\QueueAdmin
        arguments: [~, App\Entity\Queue, App\Controller\QueueAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Queue }
        public: true

    admin.match:
        class: App\Admin\MatchAdmin
        arguments: [~, App\Entity\Match, App\Controller\MatchAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Match }
        public: true
